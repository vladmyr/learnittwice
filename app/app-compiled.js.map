{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["\"use strict\";\n\n// external dependencies\nvar Promise = require(\"bluebird\");\nvar _ = require(\"underscore\");\nvar path = require(\"path\");\n\n/**\n * Server application initialization class\n * @param       {Object}  options configuration options\n * @returns     {Application}\n * @typedef     {Object}  Application\n * @constructor\n */\nvar Application = function(options){\n  var self = this;\n  var Util = require(path.join(options.dir.root, options.file.util));\n\n  var ENV = require(path.join(options.dir.root, options.file.const.env));\n\n  // Application object construction\n  self = _.extend({}, self, {\n    LANGUAGE:       require(path.join(options.dir.root, options.file.const.language)),\n    MEDIA_TYPE:     require(path.join(options.dir.root, options.file.const.mediaType)),\n    VIEW_TEMPLATE:  require(path.join(options.dir.root, options.file.const.viewTemplate)),\n\n    env: ENV.DEVELOPMENT,\n    config: options,\n    expressApps: [],\n    Util: Util\n    // TODO - httpParser\n  });\n\n  // object construction for each express entryPoint\n  _.each(self.config.entryPoints, function(entryPoint){\n    self[entryPoint.alias] = {};\n  });\n\n  return self;\n};\n\n/**\n * Initialize application instance\n * @memberOf Application\n * @return {Promise}\n */\nApplication.prototype.initialize = function(){\n  var self = this;\n\n  var MiddlewareInitializer = require(path.join(self.config.dir.root, self.config.file.init.middleware));\n  var DatabaseInitializer = require(path.join(self.config.dir.root, self.config.file.init.database));\n  var DatabaseMongoInitializer = require(path.join(self.config.dir.root, self.config.file.init.databaseMongo));\n  var ExpressInitializer = require(path.join(self.config.dir.root, self.config.file.init.express));\n\n  return Promise.resolve().then(function() {\n    // initialize middleware\n    return new MiddlewareInitializer(self);\n  }).then(function(){\n    // initialize database\n    return new DatabaseInitializer(self);\n  }).then(function(){\n    // initialize mongodb database\n    return new DatabaseMongoInitializer(self);\n  }).then(function(){\n    // initialize express\n    return new ExpressInitializer(self);\n  }).then(function(){\n    return self;\n  });\n};\n\nmodule.exports = Application;"]}