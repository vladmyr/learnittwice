environments:
  - development
  - staging
  - production
dir:
  app: /app
  controllers: /app/controllers
  domain: /app/domain
  helpers: /app/helpers
  init: /app/init
  middlewares: /app/middlewares
  models: /app/models
  modelsMongo: /app/modelsMongo
  services: /app/services
  logs: /logs
  console: /console
  databaseQueries: /databaseQueries,
  backup:
    db:
      mongo: /backup/mongo
file:
  app: /app/app
  const:
    env: /app/domain/const/Env
    language: /app/domain/const/Language
    mediaType: /app/domain/const/MediaType
    viewTemplate: /app/domain/const/ViewTemplate
    wordform: /app/domain/const/Wordform
  console:
    common:
      ArgumentsParser: /console/common/
  domain:
    database: /app/domain/Database
    databaseMongo: /app/domain/DatabaseMongo
    expressApp: /app/domain/ExpressApp
  init:
    middleware: /app/init/MiddlewareInitializer
    database: /app/init/DatabaseInitializer
    databaseMongo: /app/init/DatabaseMongoInitializer
    service: /app/init/ServiceInitializer
    express: /app/init/ExpressInitializer
  postQueries: /app/domain/databaseQueries/postQueries.sql,
  db:
    mongo:
      populate: /app/db/mongo/populate
  log:
    db: /logs/db.log
    error: /logs/error.log
  util: /app/helpers/Util
db:
  isEnabledLogging: true,
  isEnabledConsoleLoggin: true
entryPoints:
  api:
    routeRoot: /
    dir:
      controller: /app/controllers/api
    file:
      entryController: /app/controllers/api/_default
    alias: api
    port: 8081
    protocol: http
    allowedHosts:
      - protocol: http
        host: localhost
        port: 8080